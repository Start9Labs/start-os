/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

// * {
//   -webkit-touch-callout: none; /* iOS Safari */
//   -webkit-user-select: none; /* Safari */
//   -khtml-user-select: none; /* Konqueror HTML */
//   -moz-user-select: none; /* Old versions of Firefox */
//   -ms-user-select: none; /* Internet Explorer/Edge */
//   user-select: none; /* Non-prefixed version, currently
//                       supported by Chrome, Edge, Opera and Firefox */
// }

$subheader-height: 48px;

.subheader-padding {
  --padding-top: #{$subheader-height} + 10px;
}

.subheader {
  --min-height: #{$subheader-height};
}

.select-warning .alert-sub-title {
  color: var(--ion-color-warning);
}

.wide-alert {
  --min-width: 400px;
}

.break-all {
  word-break: break-all;
}

.input-label {
  // padding-top: 10px;
  margin-bottom: 6px;
  font-size: medium;
  font-weight: 500;
  * {
    display: inline-block;
    vertical-align: middle;
  }
}

.item-subdivider {
  padding: 0 16px;
  margin-top: 0;
}

.loader {
  --spinner-color: var(--ion-color-warning) !important;
  z-index: 40000 !important;
}

.borderless {
  border-style: none;
}

.item-interactive {
  --highlight-background: transparent !important;
}

.center {
  display: block;
  margin: auto;
  height: 100%;
}

ion-action-sheet {
  --button-color: var(--ion-color-dark) !important;
}

ion-toast {
  --background: var(--ion-color-light);
  --button-color: var(--ion-color-dark);
  --border-style: solid;
  --border-width: 1px;
  --color: white;
}

.warning-toast {
  --border-color: var(--ion-color-warning);
}

.success-toast {
  --border-color: var(--ion-color-success);
}

.error-toast {
  --border-color: var(--ion-color-danger);
  width: 40%;
  min-width: 400px;
  --end: 8px;
  right: 8px;
  left: unset;
  top: 64px;
}

.alert-radio-label.sc-ion-alert-md {
  white-space: normal !important;
}

.alert-radio-label.sc-ion-alert-ios {
  white-space: normal !important;
}

.inline {
  * {
    display: inline-block;
    vertical-align: middle;
  }
}

img {
  border-radius: 100%;
}

ion-card-title {
  font-family: 'Montserrat';
}

ion-title {
  font-family: 'Montserrat';
}

ion-badge {
  font-weight: bold;
}

ion-icon {
  pointer-events: none;
}

ion-toolbar {
  --min-height: 72px;
  --ion-background-color: var(--ion-color-light); 
}

ion-infinite-scroll ion-infinite-scroll-content {
  --color: var(--ion-color-warning) !important;
}

ion-alert {
  .alert-button {
    color: var(--ion-color-dark) !important;
  }
}

ion-button {
  --color: var(--ion-color-dark) !important;
}

.text-ellipses {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.modal-wrapper.sc-ion-modal-md {
  border-radius: 6px;
  border: 2px solid rgba(255,255,255,.03);
  box-shadow: 0 0 70px 70px black;
}

.qr-modal {
  .modal-wrapper {
    width: 400px !important;
    height: 400px !important;
    top: unset !important;
    left: unset !important;
  }
}

.modal-wrapper {
  position: absolute;
  height: 90% !important;
  top: 5%;
  width: 90% !important;
  left: 5%;
  display: block;
}

@media (min-width:1000px) {
  .modal-wrapper {
    position: absolute;
    height: 80% !important;
    top: 10%;
    width: 50% !important;
    left: 25%;
    display: block;
  }
}

.alertlike-modal {
  .modal-wrapper {
    max-height: 380px !important;
    top: 25% !important;
    width: 90% !important;
    left: 5% !important;
    --box-shadow: none !important;
  }
}

@media (min-width:1000px) {
  .alertlike-modal {
    .modal-wrapper {
      width: 60% !important;
      left: 20% !important;
    }
  }
}

.alert-error-message {
  .alert-title {
    color: var(--ion-color-danger);
  }
}

.alert-success-message {
  .alert-title {
    color: var(--ion-color-success);
  }
}

ion-slides {
  .slider-wrapper {
    height: 100%;
    width: 100%
  }
}

ion-item-divider {
  text-transform: uppercase;
  --padding-top: 24px;
  font-weight: 600;
  --color: var(--ion-color-dark);
  font-size: medium;
  border-bottom: none;
}

ion-item {
  border-radius: 6px;
}

ion-label {
  white-space: normal !important;
}

ion-loading {
  z-index: 100 !important;
}

.swiper-pagination {
  position: fixed;
  bottom: 0px;
  padding-bottom: 3px;
}

.rec-item {
  margin: 20px;
  border-style: solid;
  border-width: 1px;
  border-style: groove;
  border-color: dimgrey;
  border-radius: 6px;
  box-shadow: 4px 4px 16px var(--ion-color-primary);
  --padding-start: 10px;
}

.divider {
  background: linear-gradient(90deg,var(--ion-color-light) 0,var(--ion-color-dark) 50%,var(--ion-color-light) 100%);
  height: 1px;
}

.dots {
  vertical-align: top;
  margin-left: 2px;
  margin-right: 2px;
}

h2 {
  line-height: unset;
}
