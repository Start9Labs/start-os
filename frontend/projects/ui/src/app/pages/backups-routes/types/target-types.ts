import { InputSpec } from 'start-sdk/types/config-types'

export const DropboxSpec: InputSpec = {
  name: {
    type: 'string',
    name: 'Name',
    description: 'A friendly name for this Dropbox target',
    placeholder: 'My Dropbox',
    nullable: false,
    masked: false,
    warning: null,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  token: {
    type: 'string',
    name: 'Access Token',
    description: 'The secret access token for your custom Dropbox app',
    warning: null,
    placeholder: null,
    nullable: false,
    masked: true,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  path: {
    type: 'string',
    name: 'Path',
    description: 'The fully qualified path to the backup directory',
    warning: null,
    placeholder: 'e.g. /Desktop/my-folder',
    nullable: false,
    masked: false,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
}

export const GoogleDriveSpec: InputSpec = {
  name: {
    type: 'string',
    name: 'Name',
    description: 'A friendly name for this Google Drive target',
    warning: null,
    placeholder: 'My Google Drive',
    nullable: false,
    masked: false,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  key: {
    type: 'file',
    name: 'Private Key File',
    description:
      'Your Google Drive service account private key file (.json file)',
    warning: null,
    placeholder: `e.g. 'My Computer' OR 'my-computer.local'`,
    nullable: false,
    extensions: ['json'],
  },
  path: {
    type: 'string',
    name: 'Path',
    description: 'The fully qualified path to the backup directory',
    placeholder: 'e.g. /Desktop/my-folder',
    nullable: false,
    masked: false,
    warning: null,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
}

export const CifsSpec: InputSpec = {
  name: {
    type: 'string',
    name: 'Name',
    description: 'A friendly name for this Network Folder',
    warning: null,
    placeholder: 'My Network Folder',
    nullable: false,
    masked: false,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  hostname: {
    type: 'string',
    name: 'Hostname',
    description:
      'The hostname of your target device on the Local Area Network.',
    warning: null,
    textarea: false,
    nullable: false,
    masked: false,
    placeholder: `e.g. 'My Computer' OR 'my-computer.local'`,
    pattern: '^[a-zA-Z0-9._-]+( [a-zA-Z0-9]+)*$',
    'pattern-description': `Must be a valid hostname. e.g. 'My Computer' OR 'my-computer.local'`,
    default: null,
  },
  path: {
    type: 'string',
    name: 'Path',
    description: `On Windows, this is the fully qualified path to the shared folder, (e.g. /Desktop/my-folder).\n\n On Linux and Mac, this is the literal name of the shared folder (e.g. my-shared-folder).`,
    placeholder: 'e.g. my-shared-folder or /Desktop/my-folder',
    nullable: false,
    masked: false,
    warning: null,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  username: {
    type: 'string',
    name: 'Username',
    description: `On Linux, this is the samba username you created when sharing the folder.\n\n On Mac and Windows, this is the username of the user who is sharing the folder.`,
    nullable: false,
    masked: false,
    warning: null,
    placeholder: 'My Network Folder',
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  password: {
    type: 'string',
    name: 'Password',
    description: `On Linux, this is the samba password you created when sharing the folder.\n\n On Mac and Windows, this is the password of the user who is sharing the folder.`,
    nullable: true,
    masked: true,
    warning: null,
    placeholder: 'My Network Folder',
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
}

export const RemoteBackupTargetSpec: InputSpec = {
  type: {
    type: 'union',
    variants: {
      dropbox: DropboxSpec,
      'google-drive': GoogleDriveSpec,
      cifs: CifsSpec,
    },
    tag: {
      id: 'type',
      name: 'Target Type',
      description: null,
      warning: null,
      'variant-names': {
        dropbox: 'Dropbox',
        'google-drive': 'Google Drive',
        cifs: 'Network Folder',
      },
    },
    default: 'dropbox',
  },
}

export const DiskBackupTargetSpec: InputSpec = {
  name: {
    type: 'string',
    name: 'Name',
    description: 'A friendly name for this physical target',
    placeholder: 'My Physical Target',
    nullable: false,
    masked: false,
    warning: null,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
  path: {
    type: 'string',
    name: 'Path',
    description: 'The fully qualified path to the backup directory',
    placeholder: 'e.g. /Backups/my-folder',
    nullable: false,
    masked: false,
    warning: null,
    textarea: false,
    pattern: null,
    'pattern-description': null,
    default: null,
  },
}
