#!/bin/bash

if [ "$UID" -ne 0 ]; then
    >&2 echo 'Must be run as root'
    exit 1
fi

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    --no-sync)
      NO_SYNC=1
      shift
      ;;
    --create)
      ONLY_CREATE=1
      shift
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

if [ -z "$NO_SYNC" ]; then
    echo 'Syncing...'
    umount -R /media/startos/next 2> /dev/null
    rm -rf /media/startos/upper /media/startos/next
    mkdir /media/startos/upper
    mount -t tmpfs tmpfs /media/startos/upper
    mkdir -p /media/startos/upper/data /media/startos/upper/work /media/startos/next
    mount -t overlay \
		  -olowerdir=/media/startos/current,upperdir=/media/startos/upper/data,workdir=/media/startos/upper/work \
		  overlay /media/startos/next
fi

if [ -n "$ONLY_CREATE" ]; then
    exit 0
fi

mkdir -p /media/startos/next/run
mkdir -p /media/startos/next/dev
mkdir -p /media/startos/next/sys
mkdir -p /media/startos/next/proc
mkdir -p /media/startos/next/boot
mount --bind /run /media/startos/next/run
mount --bind /tmp /media/startos/next/tmp
mount --bind /dev /media/startos/next/dev
mount --bind /sys /media/startos/next/sys
mount --bind /proc /media/startos/next/proc
mount --bind /boot /media/startos/next/boot

if [ -z "$*" ]; then
    chroot /media/startos/next
    CHROOT_RES=$?
else
    chroot /media/startos/next "$SHELL" -c "$*"
    CHROOT_RES=$?
fi

umount /media/startos/next/run
umount /media/startos/next/tmp
umount /media/startos/next/dev
umount /media/startos/next/sys
umount /media/startos/next/proc
umount /media/startos/next/boot

if [ "$CHROOT_RES" -eq 0 ]; then

    if [ -h /media/startos/config/current.rootfs ] && [ -e /media/startos/config/current.rootfs ]; then
        echo 'Pruning...'
        current="$(readlink -f /media/startos/config/current.rootfs)"
        needed=$(du -s --bytes /media/startos/next | awk '{print $1}')
        while [[ "$(df -B1 --output=avail --sync /media/startos/images | tail -n1)" -lt "$needed" ]]; do
            to_prune="$(ls -t1 /media/startos/images/*.rootfs | grep -v "$current" | tail -n1)"
            if [ -e "$to_prune" ]; then
                echo "  Pruning $to_prune"
                rm -rf "$to_prune"
            else
                >&2 echo "Not enough space and nothing to prune!"
                exit 1
            fi
        done
        echo 'done.'
    fi

    echo 'Upgrading...'

    time mksquashfs /media/startos/next /media/startos/images/next.squashfs -b 4096 -comp gzip
    hash=$(b3sum /media/startos/images/next.squashfs | head -c 32)
    mv /media/startos/images/next.squashfs /media/startos/images/${hash}.rootfs
    ln -rsf /media/startos/images/${hash}.rootfs /media/startos/config/current.rootfs

    sync

    reboot
fi

umount -R /media/startos/next
rm -rf /media/startos/upper /media/startos/next